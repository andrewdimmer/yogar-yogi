{"version":3,"sources":["serviceWorker.ts","Styles/theme.ts","Styles/index.ts","Components/Layouts/NavBar.tsx","Components/Misc/LoadingScreen.tsx","Components/Misc/Notifications.tsx","Components/Pages/ErrorPage.tsx","Components/Pages/HomePage.tsx","Data/poses.ts","Scripts/poseCalibration.ts","Scripts/posenetProcessPose.ts","Scripts/posenetRender.ts","Scripts/poseDisplay.ts","Components/Content/FullScreenWebcamOverlay.tsx","Components/Content/GameModules/CalibrateCamera.tsx","Components/Content/GameModules/Practice.tsx","Components/Content/GameModules/GrantCameraAccess.tsx","Components/Content/GameModules/ScoreScreen.tsx","Components/Content/InfoViewers/ArInfoViewer.tsx","Components/Content/InfoViewers/VideoInfoViewer.tsx","Components/Content/GameModules/SelectPoses.tsx","Components/Pages/PracticePage.tsx","Components/Pages/LearnPage.tsx","Components/Pages/index.ts","Components/App.tsx","Styles/CustomThemeProvider.tsx","Styles/useDarkMode.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","lightTheme","createMuiTheme","palette","primary","deepOrange","secondary","undefined","success","error","info","warning","darkTheme","type","orange","styles","makeStyles","theme","createStyles","padded","padding","spacing","margined","margin","marginedTopBottom","marginTop","marginBottom","marginedPadded","marginRight","profileAvatarContainer","width","marginsAuto","profileViewEditGrid","profileEditImageButton","centerText","textAlign","pageTitle","playBox","height","position","top","bottom","left","right","zIndex","backgroundColor","background","default","fullSize","fab","themeBackgroundColor","useStyles","root","flexGrow","menuButton","title","NavBar","toggleTheme","setPageKey","classes","className","AppBar","Toolbar","Typography","variant","IconButton","aria-label","aria-controls","aria-haspopup","onClick","color","loadingContainer","getContrastText","loadingCircle","LoadingScreen","busyMessage","loadingMessage","localClasses","Grid","container","direction","justify","alignItems","item","CircularProgress","variantIcon","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","main","icon","fontSize","iconVariant","opacity","message","display","MySnackbarContentWrapper","props","onClose","other","Icon","SnackbarContent","clsx","aria-describedby","id","action","key","NotificationBar","notification","setNotification","handleClose","event","reason","open","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ErrorPage","Container","HomePage","Button","fullWidth","size","yogaPoses","name","difficulty","video","pose","keypoints","part","x","y","score","ar","echoarId","preview","href","usdz","calibrationNumber","getCalibrationNumber","setCalibrationNumber","calNumber","getCalibrationHelper","valid","i","upperArmLength","Math","max","sqrt","pow","foreArmLength","upperLegLength","lowerLegLength","wasitLength","shoulderLength","torsoLength","lastPoses","removePoseProcessor","poseProcessorNumber","srcObject","document","getElementById","getTracks","forEach","track","stop","getPoseProcessorNumber","createPoseProcessor","videoWidth","videoHeight","instanceNumber","setPoses","loadVideo","then","createInitialPoseNet","analyzer","net","poseDetectionFrame","a","estimatePoses","flipHorizontal","decodingMethod","maxDetections","guiState","multiPoseDetection","maxPoseDetections","scoreThreshold","minPartConfidence","nmsRadius","allPoses","requestAnimationFrame","detectPoseInRealTime","catch","err","console","log","isMobile","test","navigator","userAgent","setupCamera","mediaDevices","getUserMedia","Error","mobile","audio","facingMode","stream","Promise","resolve","onloadedmetadata","play","input","architecture","outputStride","inputResolution","multiplier","quantBytes","minPoseConfidence","output","showVideo","showSkeleton","showPoints","showBoundingBox","loadPoseNet","toTuple","drawPoint","ctx","r","beginPath","arc","PI","fillStyle","fill","drawSegment","scale","ay","ax","by","bx","moveTo","lineTo","lineWidth","strokeStyle","stroke","drawSkeleton","minConfidence","adjacentKeyPoints","getAdjacentKeyPoints","drawKeypoints","length","keypoint","generateDancePose","calibration","possiblePoses","setDance","setTimeout","FullScreenWebcamOverlay","setCalibration","React","useState","maxWidth","setMaxWidth","maxHeight","setMaxHeight","poses","matchMe","setMatchMe","screenWidth","useRef","screenHeight","canvasRef","computeWidthAndHeight","current","clientWidth","clientHeight","floor","random","handleUpdatePoses","tempPoses","createDanceGenerator","handleUpdateMatchMe","Box","ref","style","addEventListener","canvas","getContext","clearRect","save","translate","drawImage","restore","matchMeKeypoints","map","renderPosesOnCanvas","Fab","CalibrateCamera","nextStep","previousStep","calibrating","setCalibrating","disabled","Practice","practicing","setPracticing","GrantCameraAccess","checking","setChecking","mirrored","onUserMedia","onUserMediaError","videoConstraints","ScoreScreen","Transition","forwardRef","Slide","ArInfoViewer","setOpen","Dialog","TransitionComponent","keepMounted","DialogTitle","DialogContent","rel","alt","src","DialogActions","VideoInfoViewer","frameBorder","allow","SelectPoses","skipStep","arOpen","setArOpen","videoOpen","setVideoOpen","List","data","index","ListItem","ListItemIcon","Checkbox","edge","checked","onChange","newArray","concat","handleChange","ListItemText","ListItemAvatar","Divider","PracticePage","setLoadingMessage","activeStep","setActiveStep","Set","skipped","setSkipped","isStepOptional","step","isStepSkipped","has","handleNext","newSkipped","values","delete","prevActiveStep","handleBack","handleSkip","prevSkipped","add","handleCalibration","temp","getCalibration","Stepper","label","stepProps","labelProps","optional","completed","Step","StepLabel","reduce","prev","push","getStepContent","LearnPage","pageList","menuLabel","menuIcon","HomeIcon","displaySignedIn","displaySignedOut","component","PlayIcon","pageObject","pageListItem","getPageTitle","App","pageKey","PageContent","CustomThemeProvider","setTheme","componentMounted","setComponentMounted","setMode","mode","localStorage","setItem","useEffect","localTheme","getItem","matchMedia","matches","useDarkMode","ThemeProvider","CssBaseline","ReactDOM","render","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4233e80a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\nimport { deepOrange, orange } from \"@material-ui/core/colors\";\r\n\r\nexport const lightTheme = createMuiTheme({\r\n  palette: {\r\n    primary: deepOrange,\r\n    secondary: undefined,\r\n    success: undefined,\r\n    error: undefined,\r\n    info: undefined,\r\n    warning: undefined,\r\n  },\r\n});\r\n\r\nexport const darkTheme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: orange,\r\n    secondary: undefined,\r\n    success: undefined,\r\n    error: undefined,\r\n    info: undefined,\r\n    warning: undefined,\r\n  },\r\n});\r\n","import { makeStyles, createStyles } from \"@material-ui/styles\";\r\nimport { Theme } from \"@material-ui/core\";\r\nimport { lightTheme as light, darkTheme as dark } from \"./theme\";\r\n\r\nexport const styles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    padded: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    margined: {\r\n      margin: theme.spacing(2),\r\n    },\r\n    marginedTopBottom: {\r\n      marginTop: theme.spacing(2),\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    marginedPadded: {\r\n      margin: theme.spacing(2),\r\n      padding: theme.spacing(2),\r\n    },\r\n    marginRight: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    profileAvatarContainer: {\r\n      width: \"100%\",\r\n    },\r\n    marginsAuto: {\r\n      margin: \"auto\",\r\n    },\r\n    profileViewEditGrid: {\r\n      padding: 0,\r\n      marginTop: theme.spacing(2),\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    profileEditImageButton: {\r\n      marginTop: \"-60px\",\r\n    },\r\n    centerText: {\r\n      textAlign: \"center\",\r\n    },\r\n    pageTitle: {\r\n      padding: theme.spacing(2),\r\n      textAlign: \"center\",\r\n    },\r\n    playBox: {\r\n      width: \"100vw\",\r\n      height: \"100vh\",\r\n      position: \"fixed\",\r\n      top: 0,\r\n      bottom: 0,\r\n      left: 0,\r\n      right: 0,\r\n      zIndex: 1075,\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n    fullSize: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    },\r\n    fab: {\r\n      position: \"absolute\",\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(2),\r\n    },\r\n    themeBackgroundColor: {\r\n      background: theme.palette.background.default,\r\n    },\r\n  })\r\n);\r\n\r\nexport const lightTheme = light;\r\nexport const darkTheme = dark;\r\n","import {\r\n  AppBar,\r\n  createStyles,\r\n  IconButton,\r\n  makeStyles,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\r\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  })\r\n);\r\n\r\ndeclare interface NavBarProps {\r\n  theme: \"light\" | \"dark\";\r\n  toggleTheme: () => void;\r\n  setPageKey: (pageKey: string) => void;\r\n  pageTitle: string;\r\n}\r\n\r\nconst NavBar: React.FunctionComponent<NavBarProps> = ({\r\n  theme,\r\n  toggleTheme,\r\n  setPageKey,\r\n  pageTitle,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {pageTitle ? `${pageTitle} - ` : \"\"}yogAR yogi\r\n          </Typography>\r\n\r\n          <div>\r\n            <IconButton\r\n              aria-label=\"Toggle light/dark theme\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={toggleTheme}\r\n              color=\"inherit\"\r\n            >\r\n              {theme === \"dark\" ? <Brightness7Icon /> : <Brightness4Icon />}\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import {\r\n  CircularProgress,\r\n  createStyles,\r\n  Grid,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { Fragment } from \"react\";\r\n\r\ndeclare interface LoadingProps {\r\n  loadingMessage: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    loadingContainer: {\r\n      width: \"100vw\",\r\n      height: \"100vh\",\r\n      position: \"fixed\",\r\n      top: 0,\r\n      bottom: 0,\r\n      left: 0,\r\n      right: 0,\r\n      zIndex: 1350,\r\n      color: theme.palette.getContrastText(theme.palette.background.default),\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n    loadingCircle: {\r\n      margin: \"40px\",\r\n    },\r\n  })\r\n);\r\n\r\n/**\r\n * Loading Screen\r\n * @description A self contained loading screen that covers all other content on the screen while it loads. For ease of use, put it at the bottom of the main page of the react app.\r\n * @param param0 A LoadingProps object with the busy message to display on the loading screen\r\n */\r\nconst LoadingScreen: React.FunctionComponent<LoadingProps> = ({\r\n  loadingMessage: busyMessage,\r\n}) => {\r\n  const localClasses = useStyles();\r\n\r\n  if (busyMessage) {\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        className={localClasses.loadingContainer}\r\n      >\r\n        <Grid item>\r\n          <CircularProgress\r\n            color=\"primary\"\r\n            className={localClasses.loadingCircle}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"h3\">{busyMessage}</Typography>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  } else {\r\n    return <Fragment />;\r\n  }\r\n};\r\n\r\nexport default LoadingScreen;\r\n","import {\r\n  IconButton,\r\n  Snackbar,\r\n  SnackbarContent,\r\n  Theme\r\n} from \"@material-ui/core\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport { createStyles, makeStyles } from \"@material-ui/styles\";\r\nimport clsx from \"clsx\";\r\nimport React, { SyntheticEvent } from \"react\";\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    success: {\r\n      color: theme.palette.getContrastText(theme.palette.success.main),\r\n      backgroundColor: theme.palette.success.main\r\n    },\r\n    error: {\r\n      color: theme.palette.getContrastText(theme.palette.error.main),\r\n      backgroundColor: theme.palette.error.main\r\n    },\r\n    info: {\r\n      color: theme.palette.getContrastText(theme.palette.info.main),\r\n      backgroundColor: theme.palette.info.main\r\n    },\r\n    warning: {\r\n      color: theme.palette.getContrastText(theme.palette.warning.main),\r\n      backgroundColor: theme.palette.warning.main\r\n    },\r\n    icon: {\r\n      fontSize: 20\r\n    },\r\n    iconVariant: {\r\n      opacity: 0.9,\r\n      marginRight: theme.spacing(1)\r\n    },\r\n    message: {\r\n      display: \"flex\",\r\n      alignItems: \"center\"\r\n    }\r\n  })\r\n);\r\n\r\nexport interface SnackbarProps {\r\n  className?: string;\r\n  message?: string;\r\n  onClose?: () => void;\r\n  variant: keyof typeof variantIcon;\r\n}\r\n\r\nconst MySnackbarContentWrapper: React.FunctionComponent<SnackbarProps> = (\r\n  props: SnackbarProps\r\n) => {\r\n  const classes = useStyles();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"close\"\r\n          color=\"inherit\"\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n};\r\n\r\ndeclare enum NotificationTypesEnum {\r\n  success,\r\n  error,\r\n  info,\r\n  warning\r\n}\r\n\r\ndeclare type NotificationTypes = keyof typeof NotificationTypesEnum;\r\n\r\nexport declare interface NotificationMessage {\r\n  message: string;\r\n  type: NotificationTypes;\r\n  open: boolean;\r\n}\r\n\r\ndeclare interface MessageProps {\r\n  notification: NotificationMessage;\r\n  setNotification: (notificationMessage: NotificationMessage) => void;\r\n}\r\n\r\nexport default function NotificationBar({\r\n  notification,\r\n  setNotification\r\n}: MessageProps) {\r\n  const handleClose = (event?: SyntheticEvent, reason?: string) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    const type = notification.type;\r\n    const message = notification.message;\r\n    setNotification({ type, message, open: false });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\"\r\n        }}\r\n        open={notification.open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n      >\r\n        <MySnackbarContentWrapper\r\n          onClose={handleClose}\r\n          variant={notification.type}\r\n          message={notification.message}\r\n        />\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","import { Container, Typography } from \"@material-ui/core\";\r\nimport React, { Fragment } from \"react\";\r\nimport { PageProps } from \".\";\r\n\r\nconst ErrorPage: React.FunctionComponent<PageProps> = ({ classes }) => {\r\n  return (\r\n    <Fragment>\r\n      <Container className={classes.pageTitle}>\r\n        <Typography variant=\"h3\">Error!</Typography>\r\n      </Container>\r\n      <Typography variant=\"h4\">\r\n        Unable to find the page you are looking for.\r\n      </Typography>\r\n      <Typography variant=\"body1\">\r\n        Unless, of course, you are looking for an error page. In which case,\r\n        great job! You found it!{\" \"}\r\n      </Typography>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ErrorPage;\r\n","import { Container, Typography, Button } from \"@material-ui/core\";\r\nimport React, { Fragment } from \"react\";\r\nimport { styles } from \"../../Styles\";\r\nimport { PageProps } from \".\";\r\n\r\nconst HomePage: React.FunctionComponent<PageProps> = ({ setPageKey }) => {\r\n  const classes = styles();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container className={classes.pageTitle}>\r\n        <Typography variant=\"h3\">yogAR yogi!</Typography>\r\n      </Container>\r\n      <Button\r\n        color=\"primary\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        className={classes.marginedTopBottom}\r\n        onClick={() => {\r\n          setPageKey(\"learn\");\r\n        }}\r\n      >\r\n        <Typography variant=\"h4\">Learn New Poses!</Typography>\r\n      </Button>\r\n      <Button\r\n        color=\"primary\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        className={classes.marginedTopBottom}\r\n        onClick={() => {\r\n          setPageKey(\"practice\");\r\n        }}\r\n      >\r\n        <Typography variant=\"h4\">Practice Your Yoga!</Typography>\r\n      </Button>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","export declare interface YogaPose {\r\n  name: string;\r\n  difficulty: \"beginner\" | \"intermediate\" | \"advanced\";\r\n  pose?: any;\r\n  video?: string;\r\n  ar?: ARInfo;\r\n}\r\n\r\ndeclare interface ARInfo {\r\n  echoarId: string;\r\n  preview: string;\r\n  usdz: string;\r\n}\r\n\r\nexport const yogaPoses: YogaPose[] = [\r\n  {\r\n    name: \"Chair Pose\",\r\n    difficulty: \"beginner\",\r\n    video: \"https://www.youtube.com/embed/aP5elwNjfHU\",\r\n  },\r\n  {\r\n    name: \"Tree Pose\",\r\n    difficulty: \"beginner\",\r\n    pose: {\r\n      keypoints: [\r\n        {\r\n          part: \"nose\",\r\n          position: { x: 688.3834477596702, y: 207.168208753559 },\r\n          score: 0.7880235314369202,\r\n        },\r\n        {\r\n          part: \"leftEye\",\r\n          position: { x: 679.6368694337585, y: 200.28380412786782 },\r\n          score: 0.5736747980117798,\r\n        },\r\n        {\r\n          part: \"rightEye\",\r\n          position: { x: 698.8877200147555, y: 203.6276020533602 },\r\n          score: 0.5442556738853455,\r\n        },\r\n        {\r\n          part: \"leftEar\",\r\n          position: { x: 670.0089201903062, y: 217.25923597308952 },\r\n          score: 0.03547674044966698,\r\n        },\r\n        {\r\n          part: \"rightEar\",\r\n          position: { x: 711.0707439660624, y: 207.2351460792649 },\r\n          score: 0.196321502327919,\r\n        },\r\n        {\r\n          part: \"leftShoulder\",\r\n          position: { x: 697.378977886541, y: 273.4869874766175 },\r\n          score: 0.5603044629096985,\r\n        },\r\n        {\r\n          part: \"rightShoulder\",\r\n          position: { x: 753.7353896451439, y: 242.98668407386458 },\r\n          score: 0.42788994312286377,\r\n        },\r\n        {\r\n          part: \"leftElbow\",\r\n          position: { x: 720.6949143819826, y: 279.33716207155044 },\r\n          score: 0.014575042761862278,\r\n        },\r\n        {\r\n          part: \"rightElbow\",\r\n          position: { x: 704.3446014044056, y: 174.3857715029112 },\r\n          score: 0.25847163796424866,\r\n        },\r\n        {\r\n          part: \"leftWrist\",\r\n          position: { x: 677.1156485494836, y: 114.63995533258145 },\r\n          score: 0.12120731174945831,\r\n        },\r\n        {\r\n          part: \"rightWrist\",\r\n          position: { x: 688.4480033990304, y: 62.05825558514664 },\r\n          score: 0.07293038070201874,\r\n        },\r\n        {\r\n          part: \"leftHip\",\r\n          position: { x: 688.8510466345648, y: 443.93476389495424 },\r\n          score: 0.9059222340583801,\r\n        },\r\n        {\r\n          part: \"rightHip\",\r\n          position: { x: 743.4170809097676, y: 425.9386612529486 },\r\n          score: 0.9487338662147522,\r\n        },\r\n        {\r\n          part: \"leftKnee\",\r\n          position: { x: 593.1720932032568, y: 529.8801683237855 },\r\n          score: 0.8696625828742981,\r\n        },\r\n        {\r\n          part: \"rightKnee\",\r\n          position: { x: 853.7170653061762, y: 565.1642312600579 },\r\n          score: 0.6610965728759766,\r\n        },\r\n        {\r\n          part: \"leftAnkle\",\r\n          position: { x: 628.2955759701399, y: 670.1128588528701 },\r\n          score: 0.7840789556503296,\r\n        },\r\n        {\r\n          part: \"rightAnkle\",\r\n          position: { x: 973.2624561123262, y: 648.9634743274098 },\r\n          score: 0.5148862600326538,\r\n        },\r\n      ],\r\n      score: 0.4869124410016572,\r\n    },\r\n    video: \"https://www.youtube.com/embed/wdln9qWYloU\",\r\n  },\r\n  {\r\n    name: \"Warior I Pose\",\r\n    difficulty: \"beginner\",\r\n    pose: {\r\n      keypoints: [\r\n        {\r\n          part: \"nose\",\r\n          position: { x: 688.0746362181177, y: 180.65620218196386 },\r\n          score: 0.9730435013771057,\r\n        },\r\n        {\r\n          part: \"leftEye\",\r\n          position: { x: 677.8697478887806, y: 179.86556445376976 },\r\n          score: 0.9366183876991272,\r\n        },\r\n        {\r\n          part: \"rightEye\",\r\n          position: { x: 698.4784264910281, y: 163.9256348408444 },\r\n          score: 0.9132776856422424,\r\n        },\r\n        {\r\n          part: \"leftEar\",\r\n          position: { x: 674.5932963019077, y: 195.1593911614217 },\r\n          score: 0.32476046681404114,\r\n        },\r\n        {\r\n          part: \"rightEar\",\r\n          position: { x: 717.1611393997682, y: 180.1632571421879 },\r\n          score: 0.45841190218925476,\r\n        },\r\n        {\r\n          part: \"leftShoulder\",\r\n          position: { x: 684.8376946537733, y: 246.68554547806866 },\r\n          score: 0.861176609992981,\r\n        },\r\n        {\r\n          part: \"rightShoulder\",\r\n          position: { x: 750.6959318061301, y: 224.0710293407172 },\r\n          score: 0.8184776902198792,\r\n        },\r\n        {\r\n          part: \"leftElbow\",\r\n          position: { x: 659.3175610804437, y: 148.9228345844108 },\r\n          score: 0.452440470457077,\r\n        },\r\n        {\r\n          part: \"rightElbow\",\r\n          position: { x: 728.5711680214482, y: 152.190300417618 },\r\n          score: 0.19869288802146912,\r\n        },\r\n        {\r\n          part: \"leftWrist\",\r\n          position: { x: 659.8384834791316, y: 36.66208530479753 },\r\n          score: 0.4454987049102783,\r\n        },\r\n        {\r\n          part: \"rightWrist\",\r\n          position: { x: 661.4851231695629, y: 33.31357918322925 },\r\n          score: 0.2888561487197876,\r\n        },\r\n        {\r\n          part: \"leftHip\",\r\n          position: { x: 708.9971449338968, y: 424.31181917056233 },\r\n          score: 0.9808230996131897,\r\n        },\r\n        {\r\n          part: \"rightHip\",\r\n          position: { x: 754.5221336326149, y: 426.7866360973304 },\r\n          score: 0.9679903388023376,\r\n        },\r\n        {\r\n          part: \"leftKnee\",\r\n          position: { x: 718.5363683073356, y: 541.608153450657 },\r\n          score: 0.05268760025501251,\r\n        },\r\n        {\r\n          part: \"rightKnee\",\r\n          position: { x: 625.1708817634776, y: 536.1894266370317 },\r\n          score: 0.9546836018562317,\r\n        },\r\n        {\r\n          part: \"leftAnkle\",\r\n          position: { x: 843.6856423903879, y: 627.0375701743113 },\r\n          score: 0.3506052792072296,\r\n        },\r\n        {\r\n          part: \"rightAnkle\",\r\n          position: { x: 668.8096000581327, y: 697.5649528503418 },\r\n          score: 0.504153847694397,\r\n        },\r\n      ],\r\n      score: 0.6165998954983318,\r\n    },\r\n    video: \"https://www.youtube.com/embed/5rT--p_cLOc\",\r\n  },\r\n  {\r\n    name: \"Triangle Pose\",\r\n    difficulty: \"intermediate\",\r\n    video: \"https://www.youtube.com/embed/upFYlxZHif0\",\r\n  },\r\n  {\r\n    name: \"Full Lotus Pose\",\r\n    difficulty: \"advanced\",\r\n    video: \"https://www.youtube.com/embed/odKi0b2K4LY\",\r\n    ar: {\r\n      echoarId: \"eabfa791-ab02-4c79-be35-447596ff6f6f\",\r\n      preview: window.location.href + \"/assets/images/LotusPose.jpg\",\r\n      usdz: window.location.href + \"/assets/models/Anna_Full_Lotus.usdz\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Reverse Wheel Pose\",\r\n    difficulty: \"advanced\",\r\n    ar: {\r\n      echoarId: \"938011b5-8ecf-4b69-aecf-62747172e874\",\r\n      preview: window.location.href + \"/assets/images/WheelPose.jpg\",\r\n      usdz: window.location.href + \"/assets/models/Anna_Reverse_Wheel.usdz\",\r\n    },\r\n  },\r\n];\r\n","import { Pose } from \"@tensorflow-models/posenet\";\r\n\r\nlet calibrationNumber = 0;\r\nexport const getCalibrationNumber = () => calibrationNumber;\r\nexport const setCalibrationNumber = (calNumber: number) => {\r\n  calibrationNumber = calNumber;\r\n};\r\n\r\nconst minPartConfidence = 0.1;\r\nconst minPoseConfidence = 0.15;\r\n\r\nexport declare interface Calibration {\r\n  upperArmLength: number;\r\n  foreArmLength: number;\r\n  upperLegLength: number;\r\n  lowerLegLength: number;\r\n  wasitLength: number;\r\n  shoulderLength: number;\r\n  torsoLength: number;\r\n}\r\n\r\nconst getCalibrationHelper = (pose: Pose): Calibration | null => {\r\n  //TODO: Add Error Checking if pose does not have all points.\r\n  let valid = true;\r\n  const keypoints = pose.keypoints;\r\n  for (let i = 5; i < 17; i++) {\r\n    if (keypoints[i].score < minPartConfidence) {\r\n      valid = false;\r\n    }\r\n  }\r\n\r\n  if (valid) {\r\n    return {\r\n      upperArmLength: Math.max(\r\n        Math.sqrt(\r\n          Math.pow(keypoints[5].position.x - keypoints[7].position.x, 2) +\r\n            Math.pow(keypoints[5].position.y - keypoints[7].position.y, 2)\r\n        ),\r\n        Math.sqrt(\r\n          Math.pow(keypoints[6].position.x - keypoints[8].position.x, 2) +\r\n            Math.pow(keypoints[6].position.y - keypoints[8].position.y, 2)\r\n        )\r\n      ),\r\n      foreArmLength: Math.max(\r\n        Math.sqrt(\r\n          Math.pow(keypoints[7].position.x - keypoints[9].position.x, 2) +\r\n            Math.pow(keypoints[7].position.y - keypoints[9].position.y, 2)\r\n        ),\r\n        Math.sqrt(\r\n          Math.pow(keypoints[8].position.x - keypoints[10].position.x, 2) +\r\n            Math.pow(keypoints[8].position.y - keypoints[10].position.y, 2)\r\n        )\r\n      ),\r\n      upperLegLength: Math.max(\r\n        Math.sqrt(\r\n          Math.pow(keypoints[11].position.x - keypoints[13].position.x, 2) +\r\n            Math.pow(keypoints[11].position.y - keypoints[13].position.y, 2)\r\n        ),\r\n        Math.sqrt(\r\n          Math.pow(keypoints[12].position.x - keypoints[14].position.x, 2) +\r\n            Math.pow(keypoints[12].position.y - keypoints[14].position.y, 2)\r\n        )\r\n      ),\r\n      lowerLegLength: Math.max(\r\n        Math.sqrt(\r\n          Math.pow(keypoints[13].position.x - keypoints[15].position.x, 2) +\r\n            Math.pow(keypoints[13].position.y - keypoints[15].position.y, 2)\r\n        ),\r\n        Math.sqrt(\r\n          Math.pow(keypoints[14].position.x - keypoints[16].position.x, 2) +\r\n            Math.pow(keypoints[14].position.y - keypoints[16].position.y, 2)\r\n        )\r\n      ),\r\n      wasitLength: Math.sqrt(\r\n        Math.pow(keypoints[11].position.x - keypoints[12].position.x, 2) +\r\n          Math.pow(keypoints[11].position.y - keypoints[12].position.y, 2)\r\n      ),\r\n      shoulderLength: Math.sqrt(\r\n        Math.pow(keypoints[5].position.x - keypoints[6].position.x, 2) +\r\n          Math.pow(keypoints[5].position.y - keypoints[6].position.y, 2)\r\n      ),\r\n      torsoLength: Math.max(\r\n        Math.sqrt(\r\n          Math.pow(keypoints[5].position.x - keypoints[11].position.x, 2) +\r\n            Math.pow(keypoints[5].position.y - keypoints[11].position.y, 2)\r\n        ),\r\n        Math.sqrt(\r\n          Math.pow(keypoints[6].position.x - keypoints[12].position.x, 2) +\r\n            Math.pow(keypoints[6].position.y - keypoints[12].position.y, 2)\r\n        )\r\n      ),\r\n    };\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getCalibration = (poses: Pose[]): Calibration | null => {\r\n  for (let i = 0; i < poses.length; i++) {\r\n    const temp = getCalibrationHelper(poses[i]);\r\n    if (minPoseConfidence < poses[i].score && temp) {\r\n      return temp;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n","import { load as loadPoseNet, PoseNet, Pose } from \"@tensorflow-models/posenet\";\r\n\r\nlet lastPoses: Pose[] = [];\r\nexport const getLastPoses = () => lastPoses;\r\n\r\nexport const removePoseProcessor = () => {\r\n  poseProcessorNumber = 0;\r\n  lastPoses = [];\r\n  const video = document.getElementById(\"video\") as HTMLVideoElement;\r\n  const srcObject = video.srcObject as MediaStream | null;\r\n  srcObject?.getTracks().forEach((track) => track.stop());\r\n};\r\n\r\nlet poseProcessorNumber = 0;\r\n\r\nexport const getPoseProcessorNumber = () => poseProcessorNumber;\r\n\r\nexport const createPoseProcessor = (\r\n  videoWidth: number,\r\n  videoHeight: number,\r\n  instanceNumber: number,\r\n  setPoses: (poses: Pose[]) => void\r\n) => {\r\n  poseProcessorNumber = instanceNumber;\r\n\r\n  try {\r\n    loadVideo(videoWidth, videoHeight)\r\n      .then((video) => {\r\n        createInitialPoseNet()\r\n          .then((analyzer) => {\r\n            detectPoseInRealTime(video, analyzer, instanceNumber, setPoses);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nfunction isAndroid() {\r\n  return /Android/i.test(navigator.userAgent);\r\n}\r\n\r\nfunction isiOS() {\r\n  return /iPhone|iPad|iPod/i.test(navigator.userAgent);\r\n}\r\n\r\nfunction isMobile() {\r\n  return isAndroid() || isiOS();\r\n}\r\n\r\n/**\r\n * Loads a the camera to be used in the demo\r\n *\r\n */\r\nasync function setupCamera(videoWidth: number, videoHeight: number) {\r\n  if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n    throw new Error(\r\n      \"Browser API navigator.mediaDevices.getUserMedia not available\"\r\n    );\r\n  }\r\n\r\n  const video = document.getElementById(\"video\") as HTMLVideoElement;\r\n  video.width = videoWidth;\r\n  video.height = videoHeight;\r\n\r\n  const mobile = isMobile();\r\n  const stream = await navigator.mediaDevices.getUserMedia({\r\n    audio: false,\r\n    video: {\r\n      facingMode: \"user\",\r\n      width: mobile ? undefined : videoWidth,\r\n      height: mobile ? undefined : videoHeight,\r\n    },\r\n  });\r\n  video.srcObject = stream;\r\n\r\n  return new Promise<HTMLVideoElement>((resolve) => {\r\n    video.onloadedmetadata = () => {\r\n      resolve(video);\r\n    };\r\n  });\r\n}\r\n\r\nexport async function loadVideo(videoWidth: number, videoHeight: number) {\r\n  const video = await setupCamera(videoWidth, videoHeight);\r\n  video.play();\r\n\r\n  return video;\r\n}\r\n\r\nconst defaultQuantBytes: any = 2;\r\n\r\nconst defaultMobileNetMultiplier: any = isMobile() ? 0.5 : 0.75;\r\nconst defaultMobileNetStride: any = 16;\r\nconst defaultMobileNetInputResolution: any = {\r\n  width: 600, //videoWidth,\r\n  height: 500, //videoHeight,\r\n};\r\n\r\nconst guiState = {\r\n  input: {\r\n    architecture: \"MobileNetV1\",\r\n    outputStride: defaultMobileNetStride,\r\n    inputResolution: defaultMobileNetInputResolution,\r\n    multiplier: defaultMobileNetMultiplier,\r\n    quantBytes: defaultQuantBytes,\r\n  },\r\n  multiPoseDetection: {\r\n    maxPoseDetections: 5,\r\n    minPoseConfidence: 0.15,\r\n    minPartConfidence: 0.1,\r\n    nmsRadius: 30.0,\r\n  },\r\n  output: {\r\n    showVideo: true,\r\n    showSkeleton: true,\r\n    showPoints: true,\r\n    showBoundingBox: false,\r\n  },\r\n  net: null,\r\n};\r\n\r\n/**\r\n * Feeds an image to posenet to estimate poses - this is where the magic\r\n * happens. This function loops with a requestAnimationFrame method.\r\n */\r\nfunction detectPoseInRealTime(\r\n  video: HTMLVideoElement,\r\n  net: PoseNet,\r\n  instanceNumber: number,\r\n  setPoses: (poses: Pose[]) => void\r\n) {\r\n  /* const canvas = document.getElementById(\"output\");\r\n  const ctx = canvas.getContext(\"2d\");\r\n\r\n  // since images are being fed from a webcam, we want to feed in the\r\n  // original image and then just flip the keypoints' x coordinates. If instead\r\n  // we flip the image, then correcting left-right keypoint pairs requires a\r\n  // permutation on all the keypoints.\r\n\r\n  canvas.width = videoWidth;\r\n  canvas.height = videoHeight; */\r\n\r\n  const flipPoseHorizontal = true;\r\n\r\n  async function poseDetectionFrame() {\r\n    if (instanceNumber === getPoseProcessorNumber()) {\r\n      let allPoses = await net.estimatePoses(video, {\r\n        flipHorizontal: flipPoseHorizontal,\r\n        decodingMethod: \"multi-person\",\r\n        maxDetections: guiState.multiPoseDetection.maxPoseDetections,\r\n        scoreThreshold: guiState.multiPoseDetection.minPartConfidence,\r\n        nmsRadius: guiState.multiPoseDetection.nmsRadius,\r\n      });\r\n\r\n      lastPoses = allPoses;\r\n      setPoses(allPoses);\r\n    }\r\n\r\n    // Used to draw results; will likely be handled by React in a callback\r\n    /* let poses = [].concat(allPoses);\r\n    let minPoseConfidence = +guiState.multiPoseDetection.minPoseConfidence;\r\n    let minPartConfidence = +guiState.multiPoseDetection.minPartConfidence;\r\n\r\n    \r\n    ctx.clearRect(0, 0, videoWidth, videoHeight);\r\n\r\n    if (guiState.output.showVideo) {\r\n      ctx.save();\r\n      ctx.scale(-1, 1);\r\n      ctx.translate(-videoWidth, 0);\r\n      ctx.drawImage(video, 0, 0, videoWidth, videoHeight);\r\n      ctx.restore();\r\n    }\r\n\r\n    // For each pose (i.e. person) detected in an image, loop through the poses\r\n    // and draw the resulting skeleton and keypoints if over certain confidence\r\n    // scores\r\n    poses.forEach(({ score, keypoints }) => {\r\n      if (score >= minPoseConfidence) {\r\n        if (guiState.output.showPoints) {\r\n          drawKeypoints(keypoints, minPartConfidence, ctx);\r\n        }\r\n        if (guiState.output.showSkeleton) {\r\n          drawSkeleton(keypoints, minPartConfidence, ctx);\r\n        }\r\n        if (guiState.output.showBoundingBox) {\r\n          drawBoundingBox(keypoints, ctx);\r\n        }\r\n      }\r\n    });*/\r\n\r\n    requestAnimationFrame(poseDetectionFrame);\r\n  }\r\n\r\n  poseDetectionFrame();\r\n}\r\n\r\nasync function createInitialPoseNet() {\r\n  return loadPoseNet({\r\n    architecture: guiState.input.architecture as any,\r\n    outputStride: guiState.input.outputStride,\r\n    inputResolution: guiState.input.inputResolution,\r\n    multiplier: guiState.input.multiplier,\r\n    quantBytes: guiState.input.quantBytes,\r\n  });\r\n}\r\n","import {\r\n  Pose,\r\n  Keypoint,\r\n  getAdjacentKeyPoints,\r\n} from \"@tensorflow-models/posenet\";\r\n\r\nconst lineWidth = 2;\r\n\r\nexport function renderPosesOnCanvas(\r\n  canvas: HTMLCanvasElement,\r\n  poses: Pose[],\r\n  matchMe?: Pose\r\n) {\r\n  const ctx = canvas.getContext(\"2d\");\r\n  const video = document.getElementById(\"video\") as HTMLVideoElement;\r\n\r\n  console.log(poses);\r\n\r\n  if (ctx) {\r\n    // since images are being fed from a webcam, we want to feed in the\r\n    // original image and then just flip the keypoints' x coordinates. If instead\r\n    // we flip the image, then correcting left-right keypoint pairs requires a\r\n    // permutation on all the keypoints.\r\n    const flipPoseHorizontal = true;\r\n\r\n    canvas.width = video.width;\r\n    canvas.height = video.height;\r\n\r\n    const minPoseConfidence = 0.15;\r\n    const minPartConfidence = 0.1;\r\n\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    ctx.save();\r\n    ctx.scale(-1, 1);\r\n    ctx.translate(-canvas.width, 0);\r\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n    ctx.restore();\r\n\r\n    // For each pose (i.e. person) detected in an image, loop through the poses\r\n    // and draw the resulting skeleton and keypoints if over certain confidence\r\n    // scores\r\n    poses.forEach(({ score, keypoints }) => {\r\n      if (score >= minPoseConfidence) {\r\n        drawKeypoints(keypoints, minPartConfidence, ctx);\r\n        drawSkeleton(keypoints, minPartConfidence, ctx);\r\n        if (matchMe) {\r\n          const matchMeKeypoints = matchMe.keypoints.map((keypoint) => {\r\n            return {\r\n              part: keypoint.part,\r\n              position: {\r\n                x: keypoint.position.x,\r\n                y: keypoint.position.y,\r\n              },\r\n              score: keypoint.score,\r\n            };\r\n          });\r\n          drawKeypoints(matchMeKeypoints, minPartConfidence, ctx, \"white\");\r\n          drawSkeleton(matchMeKeypoints, minPartConfidence, ctx, \"white\");\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction toTuple({ y, x }: { y: number; x: number }) {\r\n  return [y, x];\r\n}\r\n\r\nexport function drawPoint(\r\n  ctx: CanvasRenderingContext2D,\r\n  y: number,\r\n  x: number,\r\n  r: number,\r\n  color: string\r\n) {\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, r, 0, 2 * Math.PI);\r\n  ctx.fillStyle = color;\r\n  ctx.fill();\r\n}\r\n\r\n/**\r\n * Draws a line on a canvas, i.e. a joint\r\n */\r\nexport function drawSegment(\r\n  [ay, ax]: number[],\r\n  [by, bx]: number[],\r\n  color: string,\r\n  scale: number,\r\n  ctx: CanvasRenderingContext2D\r\n) {\r\n  ctx.beginPath();\r\n  ctx.moveTo(ax * scale, ay * scale);\r\n  ctx.lineTo(bx * scale, by * scale);\r\n  ctx.lineWidth = lineWidth;\r\n  ctx.strokeStyle = color;\r\n  ctx.stroke();\r\n}\r\n\r\n/**\r\n * Draws a pose skeleton by looking up all adjacent keypoints/joints\r\n */\r\nexport function drawSkeleton(\r\n  keypoints: Keypoint[],\r\n  minConfidence: number,\r\n  ctx: CanvasRenderingContext2D,\r\n  color = \"aqua\",\r\n  scale = 1\r\n) {\r\n  const adjacentKeyPoints = getAdjacentKeyPoints(keypoints, minConfidence);\r\n\r\n  adjacentKeyPoints.forEach((keypoints) => {\r\n    drawSegment(\r\n      toTuple(keypoints[0].position),\r\n      toTuple(keypoints[1].position),\r\n      color,\r\n      scale,\r\n      ctx\r\n    );\r\n  });\r\n}\r\n\r\n/**\r\n * Draw pose keypoints onto a canvas\r\n */\r\nexport function drawKeypoints(\r\n  keypoints: Keypoint[],\r\n  minConfidence: number,\r\n  ctx: CanvasRenderingContext2D,\r\n  color = \"aqua\",\r\n  scale = 1\r\n) {\r\n  for (let i = 0; i < keypoints.length; i++) {\r\n    const keypoint = keypoints[i];\r\n\r\n    if (keypoint.score < minConfidence) {\r\n      continue;\r\n    }\r\n\r\n    const { y, x } = keypoint.position;\r\n    drawPoint(ctx, y * scale, x * scale, 3, color);\r\n  }\r\n}\r\n","import { Pose } from \"@tensorflow-models/posenet\";\r\nimport { Calibration } from \"./poseCalibration\";\r\n\r\nlet danceGeneratorNumber = 0;\r\nlet i = 0;\r\n\r\nexport const getDanceGeneratorNumber = () => danceGeneratorNumber;\r\n\r\nexport const removeDanceGenerator = () => {\r\n  danceGeneratorNumber = 0;\r\n};\r\n\r\nexport const createDanceGenerator = (\r\n  calibration: Calibration,\r\n  instanceNumber: number,\r\n  possiblePoses: Pose[],\r\n  setDance: (pose: Pose) => void\r\n) => {\r\n  danceGeneratorNumber = instanceNumber;\r\n  i = 0;\r\n  generateDancePose(calibration, instanceNumber, possiblePoses, setDance);\r\n};\r\n\r\nconst generateDancePose = (\r\n  calibration: Calibration,\r\n  instanceNumber: number,\r\n  possiblePoses: Pose[],\r\n  setDance: (pose: Pose) => void\r\n) => {\r\n  setDance(possiblePoses[i]);\r\n  i = (i + 1) % possiblePoses.length;\r\n  setTimeout(\r\n    () =>\r\n      generateDancePose(calibration, instanceNumber, possiblePoses, setDance),\r\n    10000\r\n  );\r\n};\r\n","import { Box, Fab } from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { Pose } from \"@tensorflow-models/posenet\";\r\nimport React, { Fragment } from \"react\";\r\nimport {\r\n  createPoseProcessor,\r\n  getLastPoses,\r\n  removePoseProcessor,\r\n} from \"../../Scripts/posenetProcessPose\";\r\nimport { renderPosesOnCanvas } from \"../../Scripts/posenetRender\";\r\nimport {\r\n  getCalibrationNumber,\r\n  setCalibrationNumber,\r\n  Calibration,\r\n} from \"../../Scripts/poseCalibration\";\r\nimport { createDanceGenerator } from \"../../Scripts/poseDisplay\";\r\n\r\ndeclare interface FullScreenWebcamOverlayProps {\r\n  onClose: () => void;\r\n  classes: any;\r\n  setCalibration?: (poses: Pose[]) => void;\r\n  calibration?: Calibration;\r\n  possiblePoses?: Pose[];\r\n}\r\n\r\nconst FullScreenWebcamOverlay: React.FunctionComponent<FullScreenWebcamOverlayProps> = ({\r\n  onClose,\r\n  classes,\r\n  setCalibration,\r\n  calibration,\r\n  possiblePoses,\r\n}) => {\r\n  const [maxWidth, setMaxWidth] = React.useState<number>(0);\r\n  const [maxHeight, setMaxHeight] = React.useState<number>(0);\r\n  const [poses, setPoses] = React.useState<Pose[]>([]);\r\n  const [matchMe, setMatchMe] = React.useState<Pose | undefined>(undefined);\r\n  const screenWidth = React.useRef<HTMLDivElement>(null);\r\n  const screenHeight = React.useRef<HTMLDivElement>(null);\r\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\r\n\r\n  const computeWidthAndHeight = () => {\r\n    if (\r\n      screenWidth.current &&\r\n      screenHeight.current &&\r\n      (screenWidth.current.clientWidth !== maxWidth ||\r\n        screenHeight.current.clientHeight !== maxHeight)\r\n    ) {\r\n      setMaxHeight(screenHeight.current.clientHeight);\r\n      setMaxWidth(screenWidth.current.clientWidth);\r\n      createPoseProcessor(\r\n        screenWidth.current.clientWidth,\r\n        screenHeight.current.clientHeight,\r\n        Math.floor(Math.random() * 1000000000) + 1,\r\n        handleUpdatePoses\r\n      );\r\n      if (setCalibration && getCalibrationNumber() === 0) {\r\n        const calNumber = Math.floor(Math.random() * 1000000000) + 1;\r\n        setCalibrationNumber(calNumber);\r\n        ((calNumber: number) =>\r\n          setTimeout(() => {\r\n            const tempPoses = getLastPoses();\r\n            if (getCalibrationNumber() === calNumber) {\r\n              if (tempPoses.length > 0) {\r\n                setCalibration(tempPoses);\r\n                setCalibrationNumber(0);\r\n                removePoseProcessor();\r\n              }\r\n            }\r\n          }, 10000))(calNumber);\r\n      }\r\n      if (possiblePoses !== undefined && calibration) {\r\n        createDanceGenerator(\r\n          calibration,\r\n          Math.floor(Math.random() * 1000000000) + 1,\r\n          possiblePoses,\r\n          handleUpdateMatchMe\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const initializeSize = () => {\r\n    computeWidthAndHeight();\r\n    window.addEventListener(\"resize\", () => {\r\n      setTimeout(computeWidthAndHeight, 1);\r\n    });\r\n  };\r\n\r\n  const handleUpdatePoses = (poses: Pose[]) => {\r\n    setPoses(poses);\r\n  };\r\n\r\n  const handleUpdateMatchMe = (pose: Pose) => {\r\n    setMatchMe(pose);\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.playBox}>\r\n      <div\r\n        ref={screenWidth}\r\n        style={{\r\n          width: \"100%\",\r\n          height: 0,\r\n          position: \"absolute\",\r\n          top: 0,\r\n          left: 0,\r\n        }}\r\n      />\r\n      <div\r\n        ref={screenHeight}\r\n        style={{\r\n          width: 0,\r\n          height: \"100%\",\r\n          position: \"absolute\",\r\n          top: 0,\r\n          left: 0,\r\n        }}\r\n      />\r\n      {setTimeout(initializeSize, 1) && <Fragment />}\r\n      <canvas ref={canvasRef}></canvas>\r\n      {(() => {\r\n        if (canvasRef.current) {\r\n          renderPosesOnCanvas(canvasRef.current, poses, matchMe);\r\n        }\r\n      })()}\r\n      <Fab\r\n        color=\"primary\"\r\n        aria-label=\"add\"\r\n        className={classes.fab}\r\n        onClick={() => {\r\n          removePoseProcessor();\r\n          onClose();\r\n        }}\r\n      >\r\n        <CloseIcon />\r\n      </Fab>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FullScreenWebcamOverlay;\r\n","import { Button, Container, Typography } from \"@material-ui/core\";\r\nimport { Pose } from \"@tensorflow-models/posenet\";\r\nimport React, { Fragment } from \"react\";\r\nimport FullScreenWebcamOverlay from \"../FullScreenWebcamOverlay\";\r\n\r\ndeclare interface CalibrateCameraProps {\r\n  nextStep: () => void;\r\n  previousStep: () => void;\r\n  classes: any;\r\n  setCalibration: (poses: Pose[]) => void;\r\n}\r\n\r\nconst CalibrateCamera: React.FunctionComponent<CalibrateCameraProps> = ({\r\n  nextStep,\r\n  previousStep,\r\n  classes,\r\n  setCalibration,\r\n}) => {\r\n  const [calibrating, setCalibrating] = React.useState<boolean>(false);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container className={classes.pageTitle}>\r\n        <Typography variant=\"h4\">Calibrate Camera</Typography>\r\n      </Container>\r\n      <Typography variant=\"body1\" className={classes.marginedTopBottom}>\r\n        yogAR yogi uses your image to see when you've done each pose. To do\r\n        that, we first need to know where you are in the picture.\r\n      </Typography>\r\n      <Typography variant=\"body1\" className={classes.marginedTopBottom}>\r\n        When you're ready, press the \"Calibrate Camera\" button below, then stand\r\n        back like you are doing a jumping jack.\r\n      </Typography>\r\n      <Typography variant=\"body1\" className={classes.marginedTopBottom}>\r\n        After 10 seconds, it will use your current pose to identify where you'll\r\n        be practicing.\r\n      </Typography>\r\n      <Typography variant=\"body1\" className={classes.marginedTopBottom}>\r\n        Ready? Press the button below to calibrate the camera!\r\n      </Typography>\r\n      <Button\r\n        color=\"primary\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        className={classes.marginedTopBottom}\r\n        disabled={calibrating}\r\n        onClick={() => {\r\n          setCalibrating(true);\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\">Calibrate Camera</Typography>\r\n      </Button>\r\n      <Button\r\n        color=\"primary\"\r\n        variant=\"outlined\"\r\n        className={classes.marginedTopBottom}\r\n        disabled={calibrating}\r\n        onClick={previousStep}\r\n      >\r\n        <Typography variant=\"body1\">Choose another camera</Typography>\r\n      </Button>\r\n      {calibrating && (\r\n        <FullScreenWebcamOverlay\r\n          onClose={() => {\r\n            setCalibrating(false);\r\n          }}\r\n          classes={classes}\r\n          setCalibration={(poses) => {\r\n            setCalibrating(false);\r\n            setTimeout(() => setCalibration(poses), 250);\r\n          }}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CalibrateCamera;\r\n","import { Button, Container, Typography } from \"@material-ui/core\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Calibration } from \"../../../Scripts/poseCalibration\";\r\nimport FullScreenWebcamOverlay from \"../FullScreenWebcamOverlay\";\r\nimport { Pose } from \"@tensorflow-models/posenet\";\r\n\r\ndeclare interface PracticeProps {\r\n  nextStep: () => void;\r\n  previousStep: () => void;\r\n  classes: any;\r\n  calibration: Calibration;\r\n  poses: Pose[];\r\n}\r\n\r\nconst Practice: React.FunctionComponent<PracticeProps> = ({\r\n  nextStep,\r\n  previousStep,\r\n  classes,\r\n  calibration,\r\n  poses,\r\n}) => {\r\n  const [practicing, setPracticing] = React.useState<boolean>(false);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container className={classes.pageTitle}>\r\n        <Typography variant=\"h4\">Practice!</Typography>\r\n      </Container>\r\n      <Typography variant=\"body1\" className={classes.marginedTopBottom}>\r\n        Ready? Press the button below to start!\r\n      </Typography>\r\n      <Button\r\n        color=\"primary\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        className={classes.marginedTopBottom}\r\n        disabled={practicing}\r\n        onClick={() => {\r\n          setPracticing(true);\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\">Start Practicing!</Typography>\r\n      </Button>\r\n      <Button\r\n        color=\"primary\"\r\n        variant=\"outlined\"\r\n        className={classes.marginedTopBottom}\r\n        disabled={practicing}\r\n        onClick={previousStep}\r\n      >\r\n        <Typography variant=\"body1\">Reselect Poses</Typography>\r\n      </Button>\r\n      {practicing && (\r\n        <FullScreenWebcamOverlay\r\n          onClose={() => {\r\n            setPracticing(false);\r\n            nextStep();\r\n          }}\r\n          classes={classes}\r\n          calibration={calibration}\r\n          possiblePoses={poses}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Practice;\r\n","import { Button, Container, Typography } from \"@material-ui/core\";\r\nimport React, { Fragment } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport { NotificationMessage } from \"../../Misc/Notifications\";\r\n\r\ndeclare interface GrantCameraAccessProps {\r\n  setNotification: (notification: NotificationMessage) => void;\r\n  nextStep: () => void;\r\n  classes: any;\r\n}\r\n\r\nconst GrantCameraAccess: React.FunctionComponent<GrantCameraAccessProps> = ({\r\n  setNotification,\r\n  nextStep,\r\n  classes,\r\n}) => {\r\n  const [checking, setChecking] = React.useState<boolean>(false);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container className={classes.pageTitle}>\r\n        <Typography variant=\"h4\">Grant Camera Access</Typography>\r\n      </Container>\r\n      <Button\r\n        color=\"primary\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        className={classes.marginedTopBottom}\r\n        disabled={checking}\r\n        onClick={() => {\r\n          setChecking(true);\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\">Grant Computer Camera Access</Typography>\r\n      </Button>\r\n\r\n      {checking && (\r\n        <Webcam\r\n          audio={false}\r\n          mirrored={true}\r\n          onUserMedia={() => {\r\n            setChecking(false);\r\n            nextStep();\r\n            console.log(\"Loaded Camera!\");\r\n          }}\r\n          onUserMediaError={() => {\r\n            setChecking(false);\r\n            setNotification({\r\n              type: \"warning\",\r\n              message: \"yogAR yogi does not have access to a camera.\",\r\n              open: true,\r\n            });\r\n          }}\r\n          videoConstraints={{ width: 0, height: 0 }}\r\n          className={classes.fullSize}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default GrantCameraAccess;\r\n","import { Button, Container, Typography } from \"@material-ui/core\";\r\nimport React, { Fragment } from \"react\";\r\n\r\ndeclare interface ScoreScreenProps {\r\n  setPageKey: (pageKey: string) => void;\r\n  previousStep: () => void;\r\n  classes: any;\r\n}\r\n\r\nconst ScoreScreen: React.FunctionComponent<ScoreScreenProps> = ({\r\n  setPageKey,\r\n  previousStep,\r\n  classes,\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <Container className={classes.pageTitle}>\r\n        <Typography variant=\"h4\">Great Job!</Typography>\r\n      </Container>\r\n      <Typography variant=\"body1\" className={classes.marginedTopBottom}>\r\n        You earned an 83%!\r\n      </Typography>\r\n      <Button\r\n        color=\"primary\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        className={classes.marginedTopBottom}\r\n        onClick={previousStep}\r\n      >\r\n        <Typography variant=\"h5\">Replay the same set of poses</Typography>\r\n      </Button>\r\n      <Button\r\n        color=\"primary\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        className={classes.marginedTopBottom}\r\n        onClick={() => {\r\n          previousStep();\r\n          previousStep();\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\">Reselect Poses</Typography>\r\n      </Button>\r\n      <Button\r\n        color=\"primary\"\r\n        fullWidth\r\n        variant=\"outlined\"\r\n        size=\"large\"\r\n        className={classes.marginedTopBottom}\r\n        onClick={() => {\r\n          setPageKey(\"home\");\r\n        }}\r\n      ></Button>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ScoreScreen;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Slide,\r\n} from \"@material-ui/core\";\r\nimport { TransitionProps } from \"@material-ui/core/transitions/transition\";\r\nimport React from \"react\";\r\nimport { yogaPoses } from \"../../../Data/poses\";\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<unknown>\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\ndeclare interface ArInfoViewerProps {\r\n  open: number | null;\r\n  setOpen: (value: number | null) => void;\r\n  classes: any;\r\n}\r\n\r\nconst ArInfoViewer: React.FunctionComponent<ArInfoViewerProps> = ({\r\n  open,\r\n  setOpen,\r\n  classes,\r\n}) => {\r\n  const handleClose = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open !== null}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={handleClose}\r\n    >\r\n      <DialogTitle>\r\n        {\"Learn How To Do The \" + (open !== null ? yogaPoses[open].name : \"\")}\r\n      </DialogTitle>\r\n      <DialogContent className={classes.centerText}>\r\n        <a rel=\"ar\" href={open !== null ? yogaPoses[open].ar?.usdz : \"\"}>\r\n          <img\r\n            width=\"200\"\r\n            height=\"200\"\r\n            alt={open !== null ? yogaPoses[open].name : \"\"}\r\n            src={open !== null ? yogaPoses[open].ar?.preview : \"\"}\r\n          />{\" \"}\r\n        </a>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose}>Close</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ArInfoViewer;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Slide,\r\n} from \"@material-ui/core\";\r\nimport { TransitionProps } from \"@material-ui/core/transitions/transition\";\r\nimport React from \"react\";\r\nimport { yogaPoses } from \"../../../Data/poses\";\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<unknown>\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\ndeclare interface VideoInfoViewerProps {\r\n  open: number | null;\r\n  setOpen: (value: number | null) => void;\r\n  classes: any;\r\n}\r\n\r\nconst VideoInfoViewer: React.FunctionComponent<VideoInfoViewerProps> = ({\r\n  open,\r\n  setOpen,\r\n  classes,\r\n}) => {\r\n  const handleClose = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open !== null}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={handleClose}\r\n    >\r\n      <DialogTitle>\r\n        {\"Learn How To Do The \" + (open !== null ? yogaPoses[open].name : \"\")}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <iframe\r\n          width=\"552\"\r\n          height=\"311\"\r\n          frameBorder={0}\r\n          title=\"Video\"\r\n          src={open !== null ? yogaPoses[open].video : \"\"}\r\n          allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n        ></iframe>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose}>Close</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default VideoInfoViewer;\r\n","import {\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  Divider,\r\n  Fab,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport ARIcon from \"@material-ui/icons/Layers\";\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\nimport React, { Fragment } from \"react\";\r\nimport { yogaPoses } from \"../../../Data/poses\";\r\nimport ArInfoViewer from \"../InfoViewers/ArInfoViewer\";\r\nimport VideoInfoViewer from \"../InfoViewers/VideoInfoViewer\";\r\n\r\ndeclare interface SelectPosesProps {\r\n  nextStep: () => void;\r\n  previousStep: () => void;\r\n  skipStep: () => void;\r\n  classes: any;\r\n  poses: boolean[];\r\n  setPoses: (poses: boolean[]) => void;\r\n}\r\n\r\nconst SelectPoses: React.FunctionComponent<SelectPosesProps> = ({\r\n  nextStep,\r\n  previousStep,\r\n  skipStep,\r\n  classes,\r\n  poses,\r\n  setPoses,\r\n}) => {\r\n  const [arOpen, setArOpen] = React.useState<number | null>(null);\r\n  const [videoOpen, setVideoOpen] = React.useState<number | null>(null);\r\n\r\n  const handleChange = (index: number) => {\r\n    const newArray = poses.concat([]);\r\n    newArray[index] = !newArray[index];\r\n    setPoses(newArray);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container className={classes.pageTitle}>\r\n        <Typography variant=\"h4\">Select Poses</Typography>\r\n      </Container>\r\n      <Container className={classes.pageTitle}>\r\n        <List>\r\n          {yogaPoses.map((data, index) => (\r\n            <Fragment>\r\n              <ListItem key={index}>\r\n                <ListItemIcon>\r\n                  <Checkbox\r\n                    edge=\"start\"\r\n                    checked={poses[index]}\r\n                    color=\"primary\"\r\n                    onChange={() => handleChange(index)}\r\n                  />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary={data.name}\r\n                  secondary={`Difficulty: ${data.difficulty}`}\r\n                />\r\n                <ListItemAvatar className={classes.marginRight}>\r\n                  <Fab\r\n                    disabled={!data.video}\r\n                    onClick={() => setVideoOpen(index)}\r\n                  >\r\n                    <YouTubeIcon />\r\n                  </Fab>\r\n                </ListItemAvatar>\r\n                <ListItemAvatar>\r\n                  <Fab disabled={!data.ar} onClick={() => setArOpen(index)}>\r\n                    <ARIcon />\r\n                  </Fab>\r\n                </ListItemAvatar>\r\n              </ListItem>\r\n              <Divider className={classes.margined} key={\"divider_\" + index} />\r\n            </Fragment>\r\n          ))}\r\n        </List>\r\n      </Container>\r\n      <Button\r\n        color=\"primary\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        className={classes.marginedTopBottom}\r\n        onClick={nextStep}\r\n      >\r\n        <Typography variant=\"h5\">Ready!</Typography>\r\n      </Button>\r\n      <Button\r\n        color=\"primary\"\r\n        variant=\"outlined\"\r\n        className={classes.marginedTopBottom}\r\n        onClick={previousStep}\r\n      >\r\n        <Typography variant=\"body1\">Recalibrate camera</Typography>\r\n      </Button>\r\n      <VideoInfoViewer\r\n        open={videoOpen}\r\n        setOpen={setVideoOpen}\r\n        classes={classes}\r\n      />\r\n      <ArInfoViewer open={arOpen} setOpen={setArOpen} classes={classes} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SelectPoses;\r\n","import {\r\n  Container,\r\n  Step,\r\n  StepLabel,\r\n  Stepper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Pose } from \"@tensorflow-models/posenet\";\r\nimport React, { Fragment } from \"react\";\r\nimport { PageProps } from \".\";\r\nimport { yogaPoses } from \"../../Data/poses\";\r\nimport { Calibration, getCalibration } from \"../../Scripts/poseCalibration\";\r\nimport CalibrateCamera from \"../Content/GameModules/CalibrateCamera\";\r\nimport Practice from \"../Content/GameModules/Practice\";\r\nimport GrantCameraAccess from \"../Content/GameModules/GrantCameraAccess\";\r\nimport ScoreScreen from \"../Content/GameModules/ScoreScreen\";\r\nimport SelectPoses from \"../Content/GameModules/SelectPoses\";\r\nimport ErrorPage from \"./ErrorPage\";\r\n\r\nconst PracticePage: React.FunctionComponent<PageProps> = ({\r\n  setPageKey,\r\n  setNotification,\r\n  setLoadingMessage,\r\n  classes,\r\n}) => {\r\n  const [activeStep, setActiveStep] = React.useState<number>(0);\r\n  const [skipped, setSkipped] = React.useState(new Set<number>());\r\n  const [calibration, setCalibration] = React.useState<Calibration | null>(\r\n    null\r\n  );\r\n  const [poses, setPoses] = React.useState<boolean[]>(\r\n    yogaPoses.map(() => true)\r\n  );\r\n  const steps = [\r\n    \"Grant Camera Permission\",\r\n    \"Calibrate Camera\",\r\n    \"Select Poses\",\r\n    \"Practice!\",\r\n  ];\r\n\r\n  function getStepContent(step: number) {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <GrantCameraAccess\r\n            setNotification={setNotification}\r\n            nextStep={handleNext}\r\n            classes={classes}\r\n          />\r\n        );\r\n      case 1:\r\n        return (\r\n          <CalibrateCamera\r\n            nextStep={handleNext}\r\n            previousStep={handleBack}\r\n            classes={classes}\r\n            setCalibration={handleCalibration}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <SelectPoses\r\n            nextStep={handleNext}\r\n            previousStep={handleBack}\r\n            skipStep={handleSkip}\r\n            classes={classes}\r\n            poses={poses}\r\n            setPoses={setPoses}\r\n          />\r\n        );\r\n      case 3:\r\n        if (calibration !== null) {\r\n          return (\r\n            <Practice\r\n              nextStep={handleNext}\r\n              previousStep={handleBack}\r\n              classes={classes}\r\n              calibration={calibration}\r\n              poses={yogaPoses.reduce((prev, current, index) => {\r\n                if (poses[index] && current.pose) {\r\n                  prev.push(current.pose);\r\n                }\r\n                return prev;\r\n              }, [] as Pose[])}\r\n            />\r\n          );\r\n        } else {\r\n          return (\r\n            <Typography variant=\"body1\">\r\n              Error! Calibration is not set. Please refresh the page and try\r\n              again.\r\n            </Typography>\r\n          );\r\n        }\r\n      case 4:\r\n        return (\r\n          <ScoreScreen\r\n            previousStep={handleBack}\r\n            setPageKey={setPageKey}\r\n            classes={classes}\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <ErrorPage\r\n            setPageKey={setPageKey}\r\n            setLoadingMessage={setLoadingMessage}\r\n            setNotification={setNotification}\r\n            classes={classes}\r\n          />\r\n        );\r\n    }\r\n  }\r\n\r\n  const isStepOptional = (step: number) => {\r\n    return step === 2;\r\n  };\r\n\r\n  const isStepSkipped = (step: number) => {\r\n    return skipped.has(step);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    if (!isStepOptional(activeStep)) {\r\n      setNotification({\r\n        type: \"warning\",\r\n        message: \"You can't skip a step that is not optional!\",\r\n        open: true,\r\n      });\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped((prevSkipped) => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n  };\r\n\r\n  const handleCalibration = (poses: Pose[]) => {\r\n    console.log(\"Starting get calibration\");\r\n    const temp = getCalibration(poses);\r\n    if (temp) {\r\n      console.log(\"Calinration complete.\");\r\n      setCalibration(temp);\r\n      handleNext();\r\n    } else {\r\n      console.log(\"Calibration failed.\");\r\n      setNotification({\r\n        type: \"error\",\r\n        message: \"Calibration Failed. Please try again.\",\r\n        open: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container className={classes.pageTitle}>\r\n        <Typography variant=\"h3\">\r\n          Let's get ready to play yogAR yogi!\r\n        </Typography>\r\n      </Container>\r\n      <Stepper activeStep={activeStep} className={classes.themeBackgroundColor}>\r\n        {steps.map((label, index) => {\r\n          const stepProps: { completed?: boolean } = {};\r\n          const labelProps: { optional?: React.ReactNode } = {};\r\n          if (isStepOptional(index)) {\r\n            labelProps.optional = (\r\n              <Typography variant=\"caption\">Optional</Typography>\r\n            );\r\n          }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      {getStepContent(activeStep)}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PracticePage;\r\n","import {\r\n  Container,\r\n  Divider,\r\n  Fab,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport ARIcon from \"@material-ui/icons/Layers\";\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\nimport React, { Fragment } from \"react\";\r\nimport { PageProps } from \".\";\r\nimport { yogaPoses } from \"../../Data/poses\";\r\nimport ArInfoViewer from \"../Content/InfoViewers/ArInfoViewer\";\r\nimport VideoInfoViewer from \"../Content/InfoViewers/VideoInfoViewer\";\r\n\r\nconst LearnPage: React.FunctionComponent<PageProps> = ({ classes }) => {\r\n  const [arOpen, setArOpen] = React.useState<number | null>(null);\r\n  const [videoOpen, setVideoOpen] = React.useState<number | null>(null);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container className={classes.pageTitle}>\r\n        <Typography variant=\"h3\">Learn New Yoga Poses</Typography>\r\n      </Container>\r\n      <List>\r\n        {yogaPoses.map((data, index) => (\r\n          <Fragment>\r\n            <ListItem key={index}>\r\n              <ListItemText\r\n                primary={data.name}\r\n                secondary={`Difficulty: ${data.difficulty}`}\r\n              />\r\n              <ListItemAvatar className={classes.marginRight}>\r\n                <Fab disabled={!data.video} onClick={() => setVideoOpen(index)}>\r\n                  <YouTubeIcon />\r\n                </Fab>\r\n              </ListItemAvatar>\r\n              <ListItemAvatar>\r\n                <Fab disabled={!data.ar} onClick={() => setArOpen(index)}>\r\n                  <ARIcon />\r\n                </Fab>\r\n              </ListItemAvatar>\r\n            </ListItem>\r\n            <Divider className={classes.margined} key={\"divider_\" + index} />\r\n          </Fragment>\r\n        ))}\r\n      </List>\r\n      <VideoInfoViewer\r\n        open={videoOpen}\r\n        setOpen={setVideoOpen}\r\n        classes={classes}\r\n      />\r\n      <ArInfoViewer open={arOpen} setOpen={setArOpen} classes={classes} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LearnPage;\r\n","import { SvgIconTypeMap } from \"@material-ui/core\";\r\nimport { OverridableComponent } from \"@material-ui/core/OverridableComponent\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport PlayIcon from \"@material-ui/icons/SportsEsports\";\r\nimport { NotificationMessage } from \"../Misc/Notifications\";\r\nimport ErrorPage from \"./ErrorPage\";\r\nimport HomePage from \"./HomePage\";\r\nimport PracticePage from \"./PracticePage\";\r\nimport LearnPage from \"./LearnPage\";\r\n\r\nexport declare interface PageProps {\r\n  setPageKey: (pageKey: string) => void;\r\n  setLoadingMessage: (loadingMessage: string) => void;\r\n  setNotification: (notification: NotificationMessage) => void;\r\n  classes: any;\r\n}\r\n\r\nexport declare interface PageListForMenuItem {\r\n  key: string;\r\n  menuLabel: string;\r\n  menuIcon: OverridableComponent<SvgIconTypeMap<{}, \"svg\">>;\r\n  displaySignedIn: boolean;\r\n  displaySignedOut: boolean;\r\n}\r\n\r\ndeclare interface PageListItem extends PageListForMenuItem {\r\n  title: string;\r\n  component: React.FunctionComponent<PageProps>;\r\n}\r\n\r\nconst pageList: PageListItem[] = [\r\n  {\r\n    key: \"home\",\r\n    title: \"\",\r\n    menuLabel: \"Home\",\r\n    menuIcon: HomeIcon,\r\n    displaySignedIn: true,\r\n    displaySignedOut: true,\r\n    component: HomePage,\r\n  },\r\n  {\r\n    key: \"learn\",\r\n    title: \"Learn\",\r\n    menuLabel: \"Learn\",\r\n    menuIcon: PlayIcon,\r\n    displaySignedIn: true,\r\n    displaySignedOut: true,\r\n    component: LearnPage,\r\n  },\r\n  {\r\n    key: \"practice\",\r\n    title: \"Practice\",\r\n    menuLabel: \"Practice\",\r\n    menuIcon: PlayIcon,\r\n    displaySignedIn: true,\r\n    displaySignedOut: true,\r\n    component: PracticePage,\r\n  },\r\n];\r\n\r\nconst pageObject = pageList.reduce((pageObject, pageListItem) => {\r\n  pageObject[pageListItem.key] = pageListItem;\r\n  return pageObject;\r\n}, {} as { [key: string]: PageListItem });\r\n\r\nexport const getPageComponent = (\r\n  key: string\r\n): React.FunctionComponent<PageProps> => {\r\n  if (pageObject[key]) {\r\n    return pageObject[key].component;\r\n  }\r\n  return ErrorPage;\r\n};\r\n\r\nexport const getPageTitle = (key: string): string => {\r\n  if (pageObject[key]) {\r\n    return pageObject[key].title;\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const pageListForMenu: PageListForMenuItem[] = pageList.map(\r\n  ({ key, menuLabel, menuIcon, displaySignedIn, displaySignedOut }) => {\r\n    return { key, menuLabel, menuIcon, displaySignedIn, displaySignedOut };\r\n  }\r\n);\r\n","import { Button, Container, Typography } from \"@material-ui/core\";\r\nimport React, { Fragment } from \"react\";\r\nimport { styles } from \"../Styles\";\r\nimport NavBar from \"./Layouts/NavBar\";\r\nimport LoadingScreen from \"./Misc/LoadingScreen\";\r\nimport NotificationBar, { NotificationMessage } from \"./Misc/Notifications\";\r\nimport { getPageComponent, getPageTitle } from \"./Pages\";\r\n\r\ndeclare interface AppProps {\r\n  theme: \"light\" | \"dark\";\r\n  toggleTheme: () => void;\r\n}\r\n\r\nconst App: React.FunctionComponent<AppProps> = ({ theme, toggleTheme }) => {\r\n  const [notification, setNotification] = React.useState<NotificationMessage>({\r\n    type: \"info\",\r\n    message: \"\",\r\n    open: false,\r\n  });\r\n  const [loadingMessage, setLoadingMessage] = React.useState<string>(\"\");\r\n  const [pageKey, setPageKey] = React.useState<string>(\"home\");\r\n\r\n  const PageContent = getPageComponent(pageKey);\r\n  const classes = styles();\r\n\r\n  return (\r\n    <Fragment>\r\n      <NavBar\r\n        pageTitle={getPageTitle(pageKey)}\r\n        setPageKey={setPageKey}\r\n        theme={theme}\r\n        toggleTheme={toggleTheme}\r\n      />\r\n      <Container className={classes.marginedTopBottom}>\r\n        <PageContent\r\n          setPageKey={setPageKey}\r\n          setLoadingMessage={setLoadingMessage}\r\n          setNotification={setNotification}\r\n          classes={classes}\r\n        />\r\n        {pageKey !== \"home\" && (\r\n          <Button\r\n            color=\"primary\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"large\"\r\n            className={classes.marginedTopBottom}\r\n            onClick={() => {\r\n              setPageKey(\"home\");\r\n            }}\r\n          >\r\n            <Typography variant=\"h6\">Return to Home</Typography>\r\n          </Button>\r\n        )}\r\n      </Container>\r\n      <LoadingScreen loadingMessage={loadingMessage} />\r\n      <NotificationBar\r\n        notification={notification}\r\n        setNotification={setNotification}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { CssBaseline, ThemeProvider } from \"@material-ui/core\";\r\nimport React, { Fragment } from \"react\";\r\nimport App from \"../Components/App\";\r\nimport { darkTheme, lightTheme } from \"./theme\";\r\nimport { useDarkMode } from \"./useDarkMode\";\r\n\r\nconst CustomThemeProvider: React.FunctionComponent = () => {\r\n  const { theme, toggleTheme, componentMounted } = useDarkMode();\r\n\r\n  if (!componentMounted) {\r\n    return <Fragment />;\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme === \"dark\" ? darkTheme : lightTheme}>\r\n      <Fragment>\r\n        <CssBaseline />\r\n        <App theme={theme} toggleTheme={toggleTheme} />\r\n      </Fragment>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default CustomThemeProvider;\r\n","import React from \"react\";\r\n\r\nexport const useDarkMode = () => {\r\n  const [theme, setTheme] = React.useState<\"light\" | \"dark\">(\"light\");\r\n  const [componentMounted, setComponentMounted] = React.useState(false);\r\n  const setMode = (mode: \"light\" | \"dark\") => {\r\n    console.log(mode);\r\n    window.localStorage.setItem(\"theme\", mode);\r\n    setTheme(mode);\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    if (theme === \"light\") {\r\n      setMode(\"dark\");\r\n    } else {\r\n      setMode(\"light\");\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const localTheme = window.localStorage.getItem(\"theme\") as\r\n      | \"light\"\r\n      | \"dark\"\r\n      | null;\r\n    window.matchMedia &&\r\n    window.matchMedia(\"(prefers-color-scheme: dark)\").matches &&\r\n    !localTheme\r\n      ? setMode(\"dark\")\r\n      : localTheme\r\n      ? setTheme(localTheme)\r\n      : setMode(\"light\");\r\n    setComponentMounted(true);\r\n  }, []);\r\n\r\n  return { theme, toggleTheme, componentMounted };\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport CustomThemeProvider from \"./Styles/CustomThemeProvider\";\r\n\r\nReactDOM.render(<CustomThemeProvider />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}